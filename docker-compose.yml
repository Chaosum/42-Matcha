services:
  backend:
    build:
      context: .
      target: final
    container_name: backend
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      DB_CONNECTION_STRING: ${DB_CONNECTION_STRING}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
      NO_REPLY_MAIL: ${NO_REPLY_MAIL}
      NO_REPLY_MAIL_PASSWORD: ${NO_REPLY_MAIL_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      IMAGE_PATH: ${IMAGE_PATH}
    ports:
      - "5163:8080"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ${IMAGE_PATH}:/app/images

  db:
    image: mysql:latest
    container_name: database
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_0900_ai_ci
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      LANG: C.UTF-8
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - db:/var/lib/mysql
      - "./database/init/init.sql:/docker-entrypoint-initdb.d/init.sql"
      - "./database/init/seed.sql:/docker-entrypoint-initdb.d/seed.sql"
      - "./database/stored_procedure/sp_App.sql:/docker-entrypoint-initdb.d/sp_App.sql"
      - "./database/stored_procedure/sp_users.sql:/docker-entrypoint-initdb.d/sp_users.sql"
      - "./database/stored_procedure/sp_Auth.sql:/docker-entrypoint-initdb.d/sp_Auth.sql"
      - "./database/stored_procedure/sp_Checks.sql:/docker-entrypoint-initdb.d/sp_Checks.sql"
      - "./database/stored_procedure/sp_chat.sql:/docker-entrypoint-initdb.d/sp_chat.sql"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  frontend:
    build:
      context: frontend
      dockerfile: prod.Dockerfile
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      - API_URL=${API_URL}
      - WS_URL=${WS_URL}

volumes:
  db: