services:
  backend:
    image: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTP_PORTS=8081
      - DB_CONNECTION_STRING=${DB_CONNECTION_STRING}
    networks:
      - back-net
      - front-net
    ports:
      - "5163:8080"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - back-net
    ports:
      - "3307:3306"
    volumes:
      - db:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  frontend:
    build:
      context: frontend
    restart: always
    networks:
      - front-net
    ports:
      - "3000:4242"
    depends_on:
      - db
        
volumes:
  db:
    
networks:
  front-net:
  back-net:
